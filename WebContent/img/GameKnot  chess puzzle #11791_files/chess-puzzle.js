var bob;var cur_mode=0;var modes={EDIT:1,SOLUTION:2,SOLUTION_FINAL:3,SOLVE:4,SOLVED:5,SOLUTION_ALT:6,ANALYZE:7};var solution;var cur_solution_node=-1;var cur_solution_move=-1;var puzzle_id=0;var puzzle_fen='4k3/8/8/8/8/8/8/4K3 w - -';var puzzle_to_move='';var puzzle_max_moves=0;var puzzle_info='';var puzzle_creator_link='';var puzzle_rating=-1;var puzzle_error_msg='';var puzzle_daily=0;var fatal_error=0;var b_can_undo_last_move=0;var b_alt_solution_started=0;var count_wrong_moves=0;var count_hints1=0;var count_hints2=0;var node_hints=[];var node_wrong_moves=[];var node_solution_moves=[];var b_disable_edit_original=1;var b_edit_mode=0;var b_puzzle_info_reset=1;var return_to_mode=0;var alt_solutions=[];var alt_sol_max_moves=0;var puzzle_comments=0;function init_board(main_div_name){if(!main_div_name)var main_div_name='pz1';bob=new ichess_create(14,main_div_name);bob.b_reload_on_style_change=1;bob.init_position(puzzle_fen);bob.init_moves_and_promos('');bob.init_options(0,0,0,1);bob.b_freestyle=1;bob.callback_get_buttons_below_board=function(){return '<div style="white-space: nowrap;" id="buttons_menu"></div>';};bob.callback_get_links_below_board=function(){return '';};bob.callback_click_move=null;bob.callback_record_move=null;bob.callback_setup_board_elements=function(){var o=bob.get_obj('help');if(o)set_css_class(o,'sml',1);window_resize(10*this.board_cell_size+220,bob.get_height()+30);};var b_flip=(bob.start_plyr()=='b')?1:0;bob.go(b_flip,0);}function pick_mouse_down(event,pc){if(!event)var event=window.event;var m_x=gk_mouse_x(event);var m_y=gk_mouse_y(event);bob.abort_mouse_move();pc&=0x1f;var cnt=0;for(var i=0;i<64;i++){var p=bob.bitboard[i]&0x1f;if(p==pc)cnt++;}var max_cnt=(pc&0x0f)==6?8:4;if(cnt>=max_cnt){pop_msg('Unable to add any more pieces of this type!',1000);return;}bob.mouse_drag_in_piece(m_x,m_y,pc);}function remove_extra_pieces(){var b_removed=0;var cnt=[];for(var i=0;i<64;i++){var pc=bob.bitboard[i]&0x1f;if(!pc)continue;if(!cnt[pc])cnt[pc]=0;var max_cnt=(pc&0x0f)==6?8:4;if(cnt[pc]>=max_cnt){bob.bitboard[i]=0;b_removed=1;continue;}cnt[pc]++;}if(b_removed){var fen=bob.encode_fen();bob.init_position(fen,1);bob.goto_move(0,1);}return b_removed;}function clear_board(){if(!confirm('This will clear the chess board with only the Kings remaining on it. Proceed?'))return;for(var i=0;i<64;i++){if((bob.bitboard[i]&0x0f)==1)continue;bob.bitboard[i]=0;}bob.redraw_all();}function contest_mode(b_no_warning_msg){if((typeof verify_contest_mode)!='function')return 0;if(!verify_contest_mode())return 0;if(!b_no_warning_msg)alert('This function is not available for the daily contest puzzle!\n\nPlease use "More puzzles" link below to access other puzzles.');return 1;}function full_board(){if(!confirm('This will reset the chess board to the position at the beginning of the game (with all chess pieces on the board). Proceed?'))return;bob.init_position('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -');bob.refresh_board();}function flip_board(){bob.flip();bob.update_to_move();}function done_board_setup(){puzzle_to_move=bob.b_flip?'b':'w';if(bob.chess_in_check(puzzle_to_move=='w'?0:0x10)){alert('Puzzles cannot start with the other side in check!');return;}var cio=bob.chess_checkmate_in_one(puzzle_to_move=='w'?0x10:0);if(cio){alert('Checkmate in 1 found!\nPlease redesign the puzzle to make it more challenging.');return;}puzzle_fen=bob.encode_fen(puzzle_to_move);pop_msg('Checking for duplicates...',5000);setTimeout('switch_to_solution()',10);}function switch_to_solution(){var data=gk_request_remote_data('/chess-puzzle-save.pl',0,null,'fc='+puzzle_fen);var res=data.split(/\n/);if(!res[0]||res[0].indexOf('puzzle=ok')!=0){var error_msg=res[1];gui_pop_message_remove();alert(error_msg);return;}start_solution();}function reset_board(){bob.init_position(puzzle_fen);bob.init_moves_and_promos('');bob.init_options(0,0,1,1);bob.reset_all();}function start_solution(){cur_mode=modes.SOLUTION;puzzle_max_moves=0;reset_board();bob.b_freestyle=0;var o=bob.get_obj('help');o.innerHTML="<b>Enter the solution:</b> by making the moves on the board. The virtual opponent's moves will be made for you automatically, one by one, covering all possible moves. To verify the solution, you need to provide a sequence of responses to all possible moves by your virtual opponent that always lead to a checkmate.";hide_possible_moves_display();o=bob.get_obj('header');o.innerHTML='<div style="padding: 3px">Puzzle: <b>'+(puzzle_to_move=='w'?'white':'black')+' to move, mate in ... moves</b></div>';o=gk_get_el('buttons_menu');o.innerHTML='<INPUT TYPE="button" VALUE="Undo" onClick="undo_move();" id="undo_move"> <INPUT TYPE="button" VALUE="Reset" onClick="restart_solution();"> <INPUT TYPE="button" VALUE="Edit Position" onClick="start_edit_board(1);"> <INPUT TYPE="button" VALUE="Save Puzzle" onClick="save_puzzle();">';solution=[];new create_solution_node(1,-1);cur_solution_node=0;cur_solution_move=-1;b_solution_final=0;bob.b_allow_new_moves=1;bob.callback_record_move=callback_record_move;bob.callback_click_move=callback_click_move;bob.callback_validate_move=null;pop_msg('Enter the solution...');enable_undo(0);}function pop_msg(msg,duration,modal_duration){gui_pop_message(msg,bob.board,duration,modal_duration);}function callback_validate_move_alt_solution(from_x,from_y,to_x,to_y,promo_piece){if(cur_mode!=modes.SOLUTION_ALT)return true;if(bob.cur_to_move!=puzzle_to_move)return true;var sn=solution[cur_solution_node];var cur_move_num=bob.current_move;if(sn.get_move_num()!=cur_move_num)report_error('Move number does not match! '+cur_move_num+'<>'+sn.get_move_num());var mtc=solution[cur_solution_node].max_moves_to_checkmate;if(!mtc)mtc=alt_sol_max_moves;if(mtc>alt_sol_max_moves){report_error('Unexpected max moves to checkmate: '+mtc+', alt_sol_max_moves: '+alt_sol_max_moves+', cur_solution_node: '+cur_solution_node,1);mtc=alt_sol_max_moves;}if(sn.moves_to_checkmate&&sn.moves_to_checkmate>0&&sn.moves_to_checkmate<3){pop_msg('Mate in 1 already found in this position!<br>All final checkmating moves are<br>automatically found by this app, so it is not<br>necessary to enter them manually.',5000);bob.redraw_all();return false;}if(cur_move_num+1>=mtc){var nn=full_moves(puzzle_max_moves);pop_msg('Too many moves! This move is not<br>a checkmate, so your solution cannot match<br>or improve the existing one (mate in '+nn+').',5000);bob.redraw_all();return false;}var last_mv=split_move(bob.chess_encode_move(from_x,from_y,to_x,to_y,promo_piece));var b_found=1;for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];if(!same_move(mv,last_mv))continue;pop_msg('This move is already present in the solution!<br>Please try a different move,<br>or use [Reset] button to restart<br>the alternative solution.',3000);bob.redraw_all();return false;}return true;}var nnn=0;function start_alt_solution(){if(contest_mode())return;gui_pop_menu_remove();if(cur_mode!=modes.SOLUTION_ALT){if(cur_mode!=modes.SOLVE&&cur_mode!=modes.SOLUTION_FINAL&&cur_mode!=modes.SOLVED){alert('Unable to enter an alternative solution right now!');return;}return_to_mode=cur_mode;cur_mode=modes.SOLUTION_ALT;update_all_nodes_fen();}var o=bob.get_obj('help');o.innerHTML="<b>Alternative solution:</b> use [&lt;] and [&gt;] buttons, or click on the moves to the right of the board, to navigate to the starting position of the alternative variation, and then enter the alternative solution by moving the pieces on the board.";bob.b_freestyle=0;b_alt_solution_started=0;update_description_display();o=gk_get_el('buttons_menu');o.innerHTML='<INPUT TYPE="button" VALUE="Undo" onClick="undo_move();" id="undo_move"> <INPUT TYPE="button" VALUE=" |&lt; " onClick="goto_start();"> <INPUT TYPE="button" VALUE="  &lt;  " onClick="goto_prev_move();"> <INPUT TYPE="button" VALUE="  &gt;  " onClick="goto_next_move();"> <INPUT TYPE="button" VALUE="Cancel" onClick="cancel_alt_solution();">';b_solution_final=0;bob.b_allow_new_moves=1;bob.callback_record_move=callback_record_move;bob.callback_click_move=callback_click_move;bob.callback_validate_move=callback_validate_move_alt_solution;alt_sol_max_moves=puzzle_max_moves;if(!solution[cur_solution_node].b_solution_move||!solution[cur_solution_node].moves||!solution[cur_solution_node].moves.length){cur_solution_node=0;cur_solution_move=-1;render_cur_soluton_node();}else{render_cur_soluton_node(1);}report_failed();pop_msg('Enter the alternative solution...');enable_undo(0);}function alt_solution_started(){if(b_alt_solution_started)return;var mtc=solution[cur_solution_node].max_moves_to_checkmate;if(mtc>alt_sol_max_moves){report_error('Unexpected max moves to checkmate: '+mtc+', alt_sol_max_moves: '+alt_sol_max_moves+', cur_solution_node: '+cur_solution_node,1);}else{alt_sol_max_moves=mtc;}var o=gk_get_el('buttons_menu');o.innerHTML='<INPUT TYPE="button" VALUE="Undo" onClick="undo_move();" id="undo_move"> <INPUT TYPE="button" VALUE="Reset" onClick="restart_alt_solution();"> <INPUT TYPE="button" VALUE="Cancel" onClick="cancel_alt_solution(1);">';hide_possible_moves_display();b_alt_solution_started=1;}function start_edit_board(b_ask_first){if(b_disable_edit_original)return;if(b_ask_first&&solution&&solution.length>1){if(!confirm('If you return to editing the initial position, the currently entered solution will be reset. Proceed?'))return;}cur_mode=modes.EDIT;bob.init_position(puzzle_fen);bob.init_moves_and_promos('');bob.init_options(0,0,0,1);bob.b_freestyle=1;bob.b_allow_new_moves=1;bob.callback_click_move=null;bob.callback_validate_move=null;bob.callback_record_move=null;bob.reset_all();hide_possible_moves_display();var o=bob.get_obj('header');o.innerHTML='<div style="padding: 3px">Setup the starting position on the board:</div>';o=gk_get_el('buttons_menu');o.innerHTML='<INPUT TYPE="button" VALUE="Reset" onClick="clear_board();"> <INPUT TYPE="button" VALUE="Full" onClick="full_board();"> <INPUT TYPE="button" VALUE="Flip" onClick="flip_board();"> <INPUT TYPE="button" VALUE="Import FEN&hellip;" onClick="import_fen();"> <INPUT TYPE="button" VALUE="Enter Solution" onClick="done_board_setup();">';o=bob.get_obj('moves');o.style.visibility='visible';o.style.display='block';var sz=bob.board_cell_size;var t='<table class=row style="margin: 2px;">';var all_pc=[2,3,4,5,6];for(var i=0;i<all_pc.length;i++){t+='<tr>';for(var ic=0;ic<=1;ic++){var piece=(ic?0x10:0)|all_pc[i];t+='<td><div style="width: '+sz+'px; height: '+sz+'px; border: 1px solid #000000;" class="img_frame evn_list" id="pick_'+piece+'" onMouseDown="pick_mouse_down(event,\''+piece+'\');"></div></td>';}t+='</tr>';}t+='</table>\n';o.innerHTML=t;for(var i=0;i<all_pc.length;i++){for(var ic=0;ic<=1;ic++){var pc=(ic?0x10:0)|all_pc[i];o=gk_get_el('pick_'+pc);bob.init_piece_image(o,pc);}}o=bob.get_obj('help');o.innerHTML='<b>Setup the starting position:</b> to add a new piece on the board, click the corresponding icon to the right of the board and then click anywhere on the board to place it. You can flip the board to change the side that makes the first move. To remove a piece from the board, click on it and then click anywhere outside of the board. After setting up the initial position, click "enter solution" button to proceed. ';pop_msg('Setup the starting position...');}function restart_solution(){if(cur_mode!=modes.SOLUTION&&cur_mode!=modes.SOLUTION_FINAL)return;if(b_disable_edit_original)return;if(!confirm('Resetting the solution will remove all entered moves. Proceed?'))return;start_solution();}function save_puzzle_info(){var o=gk_get_el('puzzle_info');if(!o)return;puzzle_info=o.value;}function setup_puzzle_edit(_disable_edit_original,_edit_mode,_puzzle_info_reset){b_disable_edit_original=_disable_edit_original?1:0;b_edit_mode=_edit_mode?1:0;b_puzzle_info_reset=_puzzle_info_reset?1:0;}function restart_alt_solution(){if(cur_mode!=modes.SOLUTION_ALT)return;if(bob.movers_active())return;if(!confirm('Resetting the alternative solution will remove all entered moves. Proceed?'))return;remove_new_moves();cur_solution_node=0;cur_solution_move=-1;if(b_alt_solution_started){reset_board();}else{render_cur_soluton_node();}start_alt_solution();}function cancel_alt_solution(b_confirm){if(cur_mode!=modes.SOLUTION_ALT)return;if(bob.movers_active())return;if(b_confirm&&!confirm('Cancelling the alternative solution will remove all entered moves. Proceed?'))return;remove_new_moves();cur_solution_node=0;cur_solution_move=-1;render_cur_soluton_node();if(return_to_mode==modes.SOLUTION_FINAL){start_solution_final('Alternative solution cancelled');}else
if(return_to_mode==modes.SOLVED){start_solved_mode('Alternative solution cancelled');}else
if(return_to_mode==modes.SOLVE){start_solve_mode();}else{report_error('Unknown mode to return to! mode='+return_to_mode);start_solve_mode(1);}return_to_mode=0;}function remove_new_moves(){var i=0;for(;i<solution.length;i++){var sn=solution[i];if(sn.b_new_node)break;if(!sn.b_solution_move){for(var j=0;j<sn.moves.length;j++){if(solution[sn.moves[j].goto_node].b_new_node){report_error('Unexpected non-solution node linking to a new node! i='+i+', j='+j);break;}}continue;}while(sn.moves.length>0){var j=sn.moves.length-1;if(!solution[sn.moves[j].goto_node].b_new_node)break;sn.moves.pop();}if(sn.moves.length==0){report_error('No moves remaining for solution node! i='+i);}for(var j=0;j<sn.moves.length;j++){if(solution[sn.moves[j].goto_node].b_new_node){report_error('Unexpected solution node still linking to a new node! i='+i+', j='+j);break;}}}while(i<solution.length){var sn=solution[solution.length-1];if(!sn.b_new_node){report_error('Unexpected not new node! i='+(solution.length-1));break;}solution.pop();}update_solution_data();}function update_solution_data(){calculate_num_moves_to_checkmate();find_deadend_nodes();calculate_max_moves_to_checkmate();}function start_solution_final(message){if((typeof message)=='undefined')message='Solution completed!';if(message)pop_msg(message);var b_alt_solution=(cur_mode==modes.SOLUTION_ALT)?1:0;cur_mode=modes.SOLUTION_FINAL;bob.init_options(0,0,1,1);bob.b_freestyle=0;bob.b_allow_new_moves=0;bob.callback_record_move=null;bob.callback_click_move=callback_click_move;bob.callback_validate_move=null;o=bob.get_obj('moves');o.style.visibility='visible';o.style.display='block';update_solution_data();for(var i=0;i<solution.length;i++){var sn=solution[i];sn.b_new_node=0;}b_edit_mode=1;if(!b_alt_solution){cur_solution_node=0;cur_solution_move=-1;}render_cur_soluton_node();if(b_alt_solution){var mtc=solution[0].moves_to_checkmate;if(mtc<puzzle_max_moves){pop_msg('You have found a better solution.<br>Congratulations!');puzzle_max_moves=mtc;}}else{if(solution[0].moves_to_checkmate!=puzzle_max_moves){report_error('Number of moves to checkmate mismatch!\nsol='+solution[0].moves_to_checkmate+', got='+puzzle_max_moves);}}update_description_display();o=gk_get_el('buttons_menu');var w=o.offsetWidth-20;o.innerHTML='<div style="text-align: left;">Additional information about the puzzle:<br><textarea id="puzzle_info" rows=3 style="width: '+w+'px" onChange="save_puzzle_info()"></textarea></div><div><INPUT TYPE="button" VALUE=" |&lt; " onClick="goto_start();"> <INPUT TYPE="button" VALUE="  &lt;  " onClick="goto_prev_move();"> <INPUT TYPE="button" VALUE="  &gt;  " onClick="goto_next_move();"> <INPUT TYPE="button" VALUE="Alt.Solution" onClick="start_alt_solution();"> '+(b_disable_edit_original?'':'<INPUT TYPE="button" VALUE="Reset" onClick="restart_solution();"> <INPUT TYPE="button" VALUE="Position" onClick="start_edit_board(1);"> ')+'<INPUT TYPE="button" VALUE="Save Puzzle" onClick="save_puzzle();"></div>';o=bob.get_obj('help');o.innerHTML='<b>Solution complete:</b> this puzzle can be saved now, after which it will be accessible by other players.';if(b_puzzle_info_reset){puzzle_info='';b_puzzle_info_reset=0;}var o=gk_get_el('puzzle_info');if(o){o.value=puzzle_info;}}function load_solution(sol_txt,b_base64){solution=[];alt_solutions=[];if(!sol_txt)return;if(b_base64)sol_txt=Base64.decode(sol_txt);var all=sol_txt.split('|');if(all.length<=0)return;for(var idx=0;idx<all.length;idx++){var rec=all[idx].split(',');if(!rec||rec.length<4){report_error('Error loading the solution! (node='+idx+')');return;}var sn=new create_solution_node(to_int(rec[1]),to_int(rec[2]),to_int(rec[0]));var moves=rec[3];var nn=4;sn.moves=[];for(var i=0;i<moves;i++){var notation=unescape(rec[nn++]);var coords=unescape(rec[nn++]);var promo=bob.validate_promo(rec[nn++]);var goto_node=rec[nn++];sn.moves.push(new create_move_load(notation,coords,promo,goto_node));}}update_movelist_and_promos();update_solution_data();var err=0;for(var idx=0;idx<solution.length;idx++){var sn=solution[idx];var move_num=sn.get_move_num();for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];if(mv.goto_node<0)err|=0x0001;else
if(mv.goto_node>=solution.length)err|=0x002;}}if(err){report_error('Error loading the solution! ('+err+')');}}function load_solution_stats(moves_taken_txt,wrongs_txt){var moves_taken=moves_taken_txt.split('|');var wrongs=wrongs_txt.split('|');for(var idx=0;idx<solution.length;idx++){var sn=solution[idx];sn.total_moved=to_int(moves_taken[idx]);sn.wrongs=to_int(wrongs[idx]);}}function add_alt_solution_info(_userid,_description,_info,_min_node,_max_node){var sol={userid:_userid,desc:_description,info:_info,min_node:_min_node,max_node:_max_node};var alt_sol=alt_solutions.length;alt_solutions.push(sol);for(var i=_min_node;i<=_max_node;i++){if(i<0||i>=solution.length){report_error('Alt.solution node out of range! '+i+','+solution.length+','+_min_node+','+_max_node);break;}solution[i].alt_sol=alt_sol;}}function save_puzzle(){if(cur_mode!=modes.SOLUTION_FINAL){alert('Unable to save -- the solution has not been fully verified yet!\nPlease enter the responses to all possible moves first.');return;}if(fatal_error){alert('Unable to save due to previous fatal error!');return;}var xhttp=gk_get_http();if(!xhttp){alert('Your web browser does not support this functionality! Unable to proceed.');return;}var info=puzzle_info;if(info.length>1000)info=info.substr(0,1000);var t='<table border=0 cellspacing=10 cellpadding=0 style="margin: 20px;"><tr><td align="center">Saving...</td></tr></table>';gui_show_fullpage_form(t);var data='pz='+puzzle_id;data+='&fen='+escape(puzzle_fen);data+='&tom='+(puzzle_to_move=='w'?'0':'1');data+='&moves='+puzzle_max_moves;data+='&info='+escape(info);var b_update=0;var min_node=-1;var max_node=-1;for(var idx=0;idx<solution.length;idx++){var sn=solution[idx];if(sn.b_loaded_node){b_update=1;}else{if(min_node<0||min_node>idx)min_node=idx;if(max_node<0||max_node<idx)max_node=idx;}var out='sol='+sn.node_idx;out+=','+(sn.b_solution_move?'1':'0');out+=','+sn.parent_node;out+=','+sn.moves.length;for(var im=0;im<sn.moves.length;im++){var mv=sn.moves[im];out+=','+escape(mv.notation);out+=','+escape(mv.coords);out+=','+(mv.promo?mv.promo:'-');out+=','+mv.goto_node;}data+='&'+out;}data+='&minn='+min_node;data+='&maxn='+max_node;data+='&update='+b_update;xhttp.open('POST','/chess-puzzle-save.pl',true);xhttp.onreadystatechange=save_puzzle_callback_handle(xhttp);xhttp.send(data);}function save_puzzle_callback_handle(_x){var x=_x;return function(){save_puzzle_callback(x);}}function save_puzzle_callback(xhttp){if(!xhttp)return;if(xhttp.readyState!=4)return;var http_text='';try{http_text=xhttp.responseText;}catch(e){}try{if(window.opener)window.opener.location.reload(true);}catch(e){}var all_response=http_text.split(/\n/);var new_id=to_int(all_response[0]);var msg;var action;if(new_id){puzzle_id=new_id;msg='The chess puzzle has been saved and is now accessible by other players!';action='top.location.href=\'/chess-puzzle.pl?pz='+puzzle_id+'\';';}else{var error_msg=all_response[1];if(error_msg)error_msg=gk_html_safe(error_msg);else error_msg='';msg='<div class=pp><em class=err>Error saving the puzzle:</em></div><div class=pp>'+error_msg+'</div>';action='gui_hide_fullpage_form();';}var t='<table class=dialog style="margin: 12px; max-width: 330px;"><tr><td style="text-align: center;">'+msg+'</td></tr><tr><td style="text-align: center; padding-top: 10px;"><INPUT TYPE="button" VALUE=" Ok " onClick="'+action+'"></td></tr></table>';gui_show_fullpage_form(t);}var html_bd_size=0;var html_bd_style=0;var html_bd_border=1;function get_web_html_code(){var ops=[];ops.push('s='+to_int(html_bd_size));if(html_bd_style){ops.push('c='+to_int(gk_get_glop(17,0)));ops.push('p='+to_int(gk_get_glop(9,0)+1));}ops.push('b='+to_int(html_bd_border));ops=ops.join(',');var promo_a=['Play <a href="http://gameknot.com/">chess</a> online','Play online <a href="http://gameknot.com/">chess</a>','Play <a href="http://gameknot.com/">chess online</a>','Play <a href="http://gameknot.com/">online chess</a>'];var promo=promo_a[Math.floor(Math.random()*promo_a.length)];return '<div id="gk-daily-puzzle"><!--'+ops+'-->'+promo+'</div>\n<script type="text/javascript" src="http://gameknot.com/daily-puzzle.js"></script>';}function update_web_html_code(){html_bd_size=gui_get_selected_option_value('puzzle_html_bd_size',0);html_bd_style=gui_get_selected_option_value('puzzle_html_bd_style',0);html_bd_border=gui_get_selected_option_value('puzzle_html_bd_border',1);var o=gk_get_el('puzzle_html_code');if(o)o.value=get_web_html_code();}function show_html_code(){var code=get_web_html_code();code=code.replace(/</g,'&lt;');code=code.replace(/>/g,'&gt;');var extra_sel='onChange="update_web_html_code();"';var all_size_options=['Fit the page (auto)',0,'Tiny',2,'Small',3,'Medium',4,'Large',5];var size_options=gui_generate_select('puzzle_html_bd_size',all_size_options,html_bd_size,extra_sel);var all_style_options=['Random (change each day)',0,'Use current',1];var style_options=gui_generate_select('puzzle_html_bd_style',all_style_options,html_bd_style,extra_sel);var all_border_options=['With border',1,'No border',0];var border_options=gui_generate_select('puzzle_html_bd_border',all_border_options,html_bd_border,extra_sel);var t='<table border=0 cellspacing=10 cellpadding=0"><tr><td align=left>To place GameKnot\'s daily puzzle on your own website/blog, simply copy and paste the following source code to your web page. The puzzle will be automatically updated every day at midnight (PST). The daily puzzle is written using HTML/JavaScript (Web 2.0), so it works in all modern web browsers and your visitors won\'t be prompted to install any additional software (like Adobe Flash, or ActiveX, etc.).</td></tr><tr><td>Puzzle board size: '+size_options+'</td></tr><tr><td>Chess set and board style: '+style_options+'</td></tr><tr><td>Dotted-line border: '+border_options+'</td></tr><tr><td align=center><div style="float: left;">Code:</div><textarea style="width: 500px; height: 70px;" readonly onClick="select();" id="puzzle_html_code">'+code+'</textarea></td></tr><tr><td align="center"><INPUT TYPE="button" VALUE="  Ok  " onClick="gui_hide_fullpage_form();"></td></tr></table>';gui_show_fullpage_form(t,null,1);}function import_fen(){var t='';t='<table border=0 cellspacing=6 cellpadding=0 style="margin: 10px;"><tr><td align="left">Enter FEN notation for the initial position:</td></tr><tr><td align="center"><textarea id="import_fen" rows=3 cols=62></textarea></td></tr><tr><td align="center"><INPUT TYPE="button" VALUE="Submit" onClick="import_fen_submit()"> <INPUT TYPE="button" VALUE="Cancel" onClick="import_fen_cancel()"></td></tr></table>';gui_show_fullpage_form(t);}function import_fen_submit(){var o=gk_get_el('import_fen');var fen=o.value;fen=fen.replace(/[^ kqrnbpKQRNBP0123456789\/\-bwabcdefgh]+/g,'');fen=fen.replace(/^\s+/g,'');if(fen){bob.init_position(fen,1);bob.init_moves_and_promos('');bob.goto_move(0,1);remove_extra_pieces();bob.redraw_all();}gui_hide_fullpage_form();}function import_fen_cancel(){gui_hide_fullpage_form();}function goto_start(){if(cur_mode!=modes.SOLUTION_FINAL&&cur_mode!=modes.SOLVED&&cur_mode!=modes.SOLUTION_ALT)return;if(cur_mode==modes.SOLUTION_ALT&&b_alt_solution_started)return;navigate_to_move(0);}function goto_prev_move(){if(cur_mode!=modes.SOLUTION_FINAL&&cur_mode!=modes.SOLVED&&cur_mode!=modes.SOLUTION_ALT)return;if(cur_mode==modes.SOLUTION_ALT&&b_alt_solution_started)return;var move_num=solution[cur_solution_node].get_move_num();if(move_num<=0)return;navigate_to_move(move_num-1);}function goto_next_move(){if(cur_mode!=modes.SOLUTION_FINAL&&cur_mode!=modes.SOLVED&&cur_mode!=modes.SOLUTION_ALT)return;if(cur_mode==modes.SOLUTION_ALT&&b_alt_solution_started)return;var move_num=solution[cur_solution_node].get_move_num();navigate_to_move(move_num+1);}function split_move(move){return{coords:move.substr(0,4),promo:move.substr(4,1)};}function same_move(mv1,mv2){if(mv1.coords!=mv2.coords)return 0;if(!mv1.promo&&!mv2.promo)return 1;if(bob.validate_promo(mv1.promo)==bob.validate_promo(mv2.promo))return 1;return 0;}function create_solution_node(_b_solution_move,_parent_node,insert_idx){this.b_loaded_node=(typeof insert_idx)=='undefined'?0:1;this.b_new_node=!this.b_loaded_node;this.fen=this.b_loaded_node?'':bob.encode_fen();this.moves=[];this.b_solution_move=_b_solution_move;this.parent_node=_parent_node;this.movelist=this.b_loaded_node?[]:bob.moves.slice();this.moves_to_checkmate=-1;if(this.b_loaded_node){this.node_idx=insert_idx;solution[insert_idx]=this;}else{this.node_idx=solution.length;solution.push(this);}this.init_possible_moves=function(){if(this.b_solution_move){report_error('init_possible_moves() called on a solution move node!');return;}var plyr=bob.cur_to_move=='w'?0x10:0;for(var x=0;x<8;x++)for(var y=0;y<8;y++){var pc=bob.bitboard[x+y*8];if(!pc)continue;if((pc&0x10)^ plyr)continue;var all=bob.chess_moves_available(x,y);for(var i=0;i<all.length;i++){var p=all[i];var x2=p[0];var y2=p[1];if(bob.is_pawn_promo_move(x,y,x2,y2)){this.moves.push(new create_move(x,y,x2,y2,'q'));this.moves.push(new create_move(x,y,x2,y2,'r'));this.moves.push(new create_move(x,y,x2,y2,'n'));this.moves.push(new create_move(x,y,x2,y2,'b'));}else{this.moves.push(new create_move(x,y,x2,y2));}}}};this.link_solution_move=function(){if(!this.b_solution_move){report_error('link_solution_move() called on a virt.opponent move node!');return;}if(cur_solution_move!=-1){report_error('link_solution_move(): Expected cur_solution_move to be -1, but got: '+cur_solution_move);}var new_move=new create_move_player(-1);for(var i=0;i<this.moves.length;i++){if(!same_move(this.moves[i],new_move))continue;report_error('Duplicate branch!');return undefined;}var new_sn=new create_solution_node(0,cur_solution_node);new_sn.init_possible_moves();new_move.goto_node=new_sn.node_idx;this.moves.push(new_move);cur_solution_node=new_sn.node_idx;cur_solution_move=-1;return new_sn;};this.get_move_num=function(){return this.movelist.length;};this.calculate_num_moves_to_checkmate=function(){if(this.moves_to_checkmate>=0)return this.moves_to_checkmate+1;if(this.moves_to_checkmate==-99){this.moves_to_checkmate=0;report_error('Infinite loop detected! node='+this.node_idx);return 1;}this.moves_to_checkmate=-99;var path_len=0;for(var i=0;i<this.moves.length;i++){var mv=this.moves[i];if(mv.goto_node<0||mv.goto_node>=solution.length)continue;var pl=solution[mv.goto_node].calculate_num_moves_to_checkmate();if(path_len==0||(this.b_solution_move&&pl<path_len)||(!this.b_solution_move&&pl>path_len))path_len=pl;}this.moves_to_checkmate=path_len;return path_len+1;};this.calculate_max_moves_to_checkmate=function(depth,cur_max_moves){if(this.max_moves_to_checkmate>=0)return;var max_moves=this.moves_to_checkmate+depth;if(max_moves>cur_max_moves)max_moves=cur_max_moves;this.max_moves_to_checkmate=max_moves;for(var i=0;i<this.moves.length;i++){var mv=this.moves[i];if(mv.goto_node<0||mv.goto_node>=solution.length)continue;solution[mv.goto_node].calculate_max_moves_to_checkmate(depth+1,max_moves);}};this.find_deadend_nodes=function(){if(!this.b_deadend)return;this.b_deadend=0;if(!this.b_solution_move){for(var i=0;i<this.moves.length;i++){var mv=this.moves[i];if(mv.goto_node<0)continue;solution[mv.goto_node].find_deadend_nodes();}return;}var best_mtc=-1;for(var i=0;i<this.moves.length;i++){var mv=this.moves[i];if(mv.goto_node<0)continue;var mtc=solution[mv.goto_node].moves_to_checkmate;if(best_mtc<0||mtc<best_mtc)best_mtc=mtc;}for(var i=0;i<this.moves.length;i++){var mv=this.moves[i];if(mv.goto_node<0)continue;var mtc=solution[mv.goto_node].moves_to_checkmate;if(mtc!=best_mtc)continue;solution[mv.goto_node].find_deadend_nodes();}};}function compare_best_move_solution(a,b){var a_mtc=solution[a.goto_node].moves_to_checkmate;var b_mtc=solution[b.goto_node].moves_to_checkmate;if(a_mtc>b_mtc)return 1;if(a_mtc<b_mtc)return-1;if(a.notation>b.notation)return 1;if(a.notation<b.notation)return-1;return 0;}function compare_best_move_opponent(a,b){var a_mtc=solution[a.goto_node].moves_to_checkmate;var b_mtc=solution[b.goto_node].moves_to_checkmate;if(a_mtc<b_mtc)return 1;if(a_mtc>b_mtc)return-1;if(a.notation>b.notation)return 1;if(a.notation<b.notation)return-1;return 0;}function update_movelist_and_promos(){for(var i=0;i<solution.length;i++){var sn=solution[i];sn.movelist=[];}recursive_update_movelist_and_promos(0);}function recursive_update_movelist_and_promos(idx){var sn=solution[idx];for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];var child_idx=mv.goto_node;if(child_idx<0)continue;var child=solution[child_idx];if(!child){report_error('Index out of range, child_idx='+child_idx);return;}if(child.movelist.length>0)continue;child.movelist=sn.movelist.slice();child.movelist.push(mv.coords+bob.validate_promo(mv.promo));recursive_update_movelist_and_promos(child_idx);}}function find_deadend_nodes(){if(!solution.length)return;for(var i=0;i<solution.length;i++)solution[i].b_deadend=1;solution[0].find_deadend_nodes();}function calculate_num_moves_to_checkmate(){if(!solution.length)return;for(var i=0;i<solution.length;i++)solution[i].moves_to_checkmate=-1;solution[0].calculate_num_moves_to_checkmate();for(var i=0;i<solution.length;i++){var sn=solution[i];if(sn.moves_to_checkmate<0){report_error('Orphaned solution node, idx='+i);}if(sn.b_solution_move)sn.moves.sort(compare_best_move_solution);else sn.moves.sort(compare_best_move_opponent);}}function calculate_max_moves_to_checkmate(){if(!solution.length)return;for(var i=0;i<solution.length;i++)solution[i].max_moves_to_checkmate=-1;solution[0].calculate_max_moves_to_checkmate(0,puzzle_max_moves);}function create_move(x,y,x2,y2,promo){this.notation=bob.chess_move_notation(x,y,x2,y2,promo);this.coords=bob.chess_encode_move(x,y,x2,y2).substr(0,4);this.promo=promo;this.goto_node=-1;}function create_move_player(_goto_node){var mv=bob.chess_get_last_move();this.coords=mv.substr(0,4);this.promo=bob.validate_promo(mv.substr(4,1));this.notation=bob.chess_get_last_move_notation();this.goto_node=_goto_node;}function create_move_load(_notation,_coords,_promo,_goto_node){this.notation=_notation;this.coords=_coords.substr(0,4);this.promo=bob.validate_promo(_promo);this.goto_node=_goto_node;}function update_description_display(){var o=bob.get_obj('header');if(!o)return;var b_contest=contest_mode(1)?1:0;var puzzle_prefix=b_contest?'<b class=wrn>DAILY CONTEST PUZZLE</b>':'Puzzle'+(puzzle_id>0?' #'+puzzle_id:'');var t='<div style="padding: 3px">'+puzzle_prefix+': <b>'+get_puzzle_description()+'</b></div>';if(b_contest&&(cur_mode==modes.SOLVE||cur_mode==modes.ANALYZE)){t+='<div style="height: 50px;"><i>Solve the daily chess puzzle for a chance to win the Grand Prize!</i><br>&raquo; <a href="/chess-puzzle-contest.pl" target="_blank">more information&hellip;</a></div>';}else
if(cur_mode==modes.SOLVE||cur_mode==modes.SOLVED||cur_mode==modes.ANALYZE||(!b_edit_mode&&cur_mode==modes.SOLUTION_ALT)){var w=o.offsetWidth-10;var cl=puzzle_creator_link?('Created by '+puzzle_creator_link+': '):'';t+='<div style="overflow-y: auto; width: '+w+'px; height: 50px; white-space: normal;">'+cl+'<i style="font-size: 12px;">'+gk_html_safe(puzzle_info)+'</i></div>';}var display_stars=(cur_mode==modes.SOLVED)||((cur_mode==modes.SOLVE)&&(puzzle_rating>=0)&&!b_contest);if(fatal_error)display_stars=0;if(display_stars){var cls=puzzle_rating>=0?'':' wrn';t='<div style="float: right; white-space: nowrap; margin: -3px 0px -3px 0px"><div class="sml'+cls+'">Rate the difficulty:<div id="star_box" style="margin-top: -2px; margin-left: auto;"></div></div></div>'+t;}o.innerHTML=t;if(display_stars){var stars=new create_stars(puzzle_id,'star_box',puzzle_rating>=0?puzzle_rating:0,'chess-puzzle-rating.pl');stars.display(1,0);}}function rate_stars_callback_set_rating(id,new_rating){if(id!=puzzle_id)return;puzzle_rating=new_rating;update_description_display();}function full_moves(m){return Math.floor((m+1)/2);}function get_puzzle_description(){var nn=full_moves(puzzle_max_moves);return(puzzle_to_move=='w'?'White':'Black')+' to move, mate in '+nn+' '+(nn==1?'move':'moves');}function callback_record_move(){bob.b_allow_new_moves=0;if(bob.movers_active()){setTimeout('callback_record_move()',100);return;}if(cur_mode==modes.SOLUTION||cur_mode==modes.SOLUTION_ALT){callback_record_move_solution();}else
if(cur_mode==modes.SOLVE){callback_record_move_solve();}}function callback_record_move_solution(){if(cur_mode==modes.SOLUTION){if(bob.b_checkmate&&(bob.max_move>puzzle_max_moves)){puzzle_max_moves=bob.max_move;update_description_display();}}if(cur_mode==modes.SOLUTION_ALT){var cur_move_num=bob.current_move;if(cur_move_num>puzzle_max_moves)report_error('Number of moves exceeded! '+cur_move_num+'>'+puzzle_max_moves);alt_solution_started();}if((solution.length>1600)||((cur_mode==modes.SOLUTION)&&(solution.length>800))){bob.b_allow_new_moves=0;pop_msg('Error: too many possible variations!<br>Please redesign your puzzle to reduce the number of possible moves.',10000);return;}enable_undo(0);var sn=solution[cur_solution_node];if(bob.cur_to_move==puzzle_to_move){var cur_fen=bob.encode_fen();var cur_move_num=bob.current_move;var existing_node=-1;for(var i=0;i<solution.length;i++){var tn=solution[i];if(!tn.b_solution_move)continue;if(tn.fen!=cur_fen)continue;if(tn.get_move_num()<cur_move_num)continue;existing_node=i;break;}var new_sn;if(existing_node<0){new_sn=new create_solution_node(1,cur_solution_node);}else{new_sn=solution[existing_node];new_sn.parent_node=cur_solution_node;}if(cur_solution_move<0||cur_solution_move>=sn.moves.length){report_error('Unexpected solution move number in callback_record_move_solution(): '+cur_solution_move+'\nmove: '+bob.chess_get_last_move()+'\nexisting_node: '+existing_node);return;}sn.moves[cur_solution_move].goto_node=new_sn.node_idx;cur_solution_move=-1;cur_solution_node=new_sn.node_idx;if(existing_node>=0){update_movelist_and_promos();if(!find_unfinished_branches()){start_solution_final();}return;}var cio=bob.chess_checkmate_in_one(bob.cur_to_move=='w'?0x10:0);if(cio){pop_msg('Checkmate in 1 found!',1000);make_move(cio.substr(0,4),cio.substr(4,1),1);return;}enable_undo_if_possible();bob.b_allow_new_moves=1;update_last_move_cell_cursor();return;}var new_sn=sn.link_solution_move();if(!new_sn){if(!find_unfinished_branches()){start_solution_final();}return;}if(new_sn.moves.length==0){if(!bob.b_checkmate){if(!bob.chess_stalemate(bob.cur_to_move=='w'?0x10:0)){report_error('Stalemate expected!');}undo_one_move();bob.b_allow_new_moves=1;pop_msg('Stalemate! Try again.',3000);return;}if(!find_unfinished_branches()){start_solution_final();}return;}cur_solution_move=0;for(var i=0;i<new_sn.moves.length;i++){if(new_sn.moves[i].goto_node>=0)continue;cur_solution_move=i;break;}var mv=new_sn.moves[cur_solution_move];make_move(mv.coords,mv.promo);enable_undo(1);}function enable_undo(b){var o=gk_get_el('undo_move');if(o)o.disabled=!b;b_can_undo_last_move=b;}function make_move(coords,promo,b_skip_mover){var mc=bob.chess_decode_move(coords);var x1=mc[0];var y1=mc[1];var x2=mc[2];var y2=mc[3];if(bob.is_pawn_promo_move(x1,y1,x2,y2)&&bob.validate_promo(promo)=='-'){promo='q';}var old_callback=bob.callback_record_move;bob.b_allow_new_moves=0;bob.callback_record_move=null;bob.record_move(x1,y1,x2,y2,promo);if(!b_skip_mover)bob.start_new_mover(x1,y1,x2,y2);bob.callback_record_move=old_callback;if((typeof bob.callback_record_move)=='function')bob.callback_record_move();}function report_solved(b_solved){if(b_solved&&(get_media()=='fb')){try{facebook_post_story('/comment.pl?t=2&k='+puzzle_id);var iu='/chess-diagram-img.pl?f='+puzzle_fen+'&fb='+(puzzle_to_move=='b'?1:0)+'&t=1&s=2&fm=1&c=1&sh=0&bg=0';facebook_post_to_feed(iu,'I solved today\'s puzzle!','Can you solve it too?','Daily Chess Puzzles by GameKnot.com');}catch(e){gk_log_error('#FB: '+e);}}if(!is_logged_in()){if(b_solved)setTimeout("show_stats()",100);return 0;}if(contest_mode(1)){if(!b_solved)return 0;var params=[];params.push('id='+puzzle_id);params.push('wm='+count_wrong_moves);params.push('f=1');var data=gk_request_remote_data('/chess-puzzle-contest-report.pl',0,null,params.join('&'));if(data.indexOf('puzzle-contest=ok')!=0){alert('Error communicating with the server.\nPlease try again later!');top.location.href=location.href;return 0;}return 1;}var mvs='';for(var i=0;i<solution.length;i++){if(!node_solution_moves[i])continue;if(mvs)mvs+='|';mvs+=(node_wrong_moves[i]||node_hints[i])?'-'+i:i;}var params=[];params.push('id='+puzzle_id);params.push('sl='+(b_solved?1:0));params.push('wm='+count_wrong_moves);params.push('h1='+count_hints1);params.push('h2='+count_hints2);params.push('mv='+mvs);params.push('ms='+(b_solved?1:0));gk_request_remote_data('/chess-puzzle-rating.pl',0,b_solved?show_stats_after_solved:function(){},params.join('&'));return 1;}function show_stats_after_solved(id,txt){if(!txt)return;var data=txt.split('\n');if(data[0]!='puzzle-stats.1.0'){alert('ERROR: unable to establish connection to the server!\n');return 0;}var s={};try{s=eval('('+data[1]+')');}catch(e){report_error('Error parsing JSON: '+data[1]);}render_stats(s,1,'Puzzle solved, congratulations!');}function report_failed(){if(!is_logged_in())return 0;var params=[];params.push('id='+puzzle_id);params.push('fd=1');gk_request_remote_data('/chess-puzzle-rating.pl',0,function(){},params.join('&'));return 1;}function report_contest_wrong_move(){if(is_logged_in()){var params=[];params.push('id='+puzzle_id);params.push('wm='+count_wrong_moves);var data=gk_request_remote_data('/chess-puzzle-contest-report.pl',0,null,params.join('&'));if(data.indexOf('puzzle-contest=ok')!=0){alert('Error communicating with the server.\nPlease try again!');top.location.href=location.href;return;}}var n=3-count_wrong_moves;if(n<0)return;if(n==0)n='NO';var m=['Wrong move','Not quite','Sorry','Incorrect'];pop_msg(m[Math.floor(Math.random()*m.length)]+'. Try again!<br>You have <b>'+n+'</b> more wrong move'+(n!=1?'s':'')+'<br>you can make before failing to solve this puzzle&hellip;',2000,1000);setTimeout(function(){bob.b_allow_new_moves=1;},1);}function report_wrong_move(){count_wrong_moves++;if(contest_mode(1)){bob.b_allow_new_moves=0;if(count_wrong_moves>=4){report_contest_wrong_move();alert('Sorry, you have failed to solve this puzzle.\nPlease check back tomorrow for the correct solution and\na new puzzle and another chance to win the Grand Prize!');top.location.href=location.href;return;}pop_msg('Processing, please wait...',10000,10000);setTimeout(function(){report_contest_wrong_move();},1);return;}if(count_wrong_moves==1||count_wrong_moves==6)report_solved(0);var m=['Wrong move','Not quite','Sorry','Incorrect'];pop_msg(m[Math.floor(Math.random()*m.length)]+'. Try again!',1000);}function decide_best_move(node_idx){var sn=solution[node_idx];var best_moves=[];var to_checkmate=-1;for(var i=0;i<sn.moves.length;i++){var tc=solution[sn.moves[i].goto_node].moves_to_checkmate;if(tc>to_checkmate){best_moves=[];to_checkmate=tc;}if(tc==to_checkmate){best_moves.push(i);}}if(best_moves.length<=1){return best_moves[0];}var best_moves_r=[];var total_r=0;for(var i=0;i<best_moves.length;i++){var next_sn=solution[sn.moves[best_moves[i]].goto_node];var r=100;var tm=next_sn.total_moved;if(tm>0)r=100*next_sn.wrongs/tm;r+=10;tm/=10;if(tm<1)r=r*tm+100*(1-tm);best_moves_r[i]=r;total_r+=r;}var r=Math.random()*total_r;total_r=0;for(var i=0;i<best_moves.length;i++){total_r+=best_moves_r[i];if(r<=total_r)return best_moves[i];}return best_moves[best_moves.length-1];}function callback_record_move_solve(){var sn=solution[cur_solution_node];if(bob.b_checkmate){if(!report_solved(1))return;var last_mv=split_move(bob.chess_get_last_move());for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];if(!same_move(mv,last_mv))continue;cur_solution_node=mv.goto_node;break;}start_solved_mode();return;}if(bob.cur_to_move!=puzzle_to_move){var last_mv=split_move(bob.chess_get_last_move());var b_found=0;var best_mtc=-1;for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];var mtc=solution[mv.goto_node].moves_to_checkmate;if(best_mtc<0)best_mtc=mtc;if(best_mtc<mtc)break;if(!same_move(mv,last_mv))continue;b_found=1;break;}if(b_found){cur_solution_node=mv.goto_node;sn=solution[cur_solution_node];var best_move=decide_best_move(cur_solution_node);mv=sn.moves[best_move];cur_solution_node=mv.goto_node;node_solution_moves[cur_solution_node]=1;make_move(mv.coords,mv.promo);return;}report_wrong_move();bob.undo_last_move();if(!node_wrong_moves[cur_solution_node])node_wrong_moves[cur_solution_node]=1;else node_wrong_moves[cur_solution_node]++;}bob.b_allow_new_moves=1;update_last_move_cell_cursor();}function update_last_move_cell_cursor(){if(bob.current_move<2)return;var mv=bob.moves[bob.current_move-2];var cc=bob.chess_decode_move(mv);var x=cc[2];var y=cc[3];if(x<0||y<0)return;bob.update_cell_cursor(x,y);}function callback_validate_move_solve(from_x,from_y,to_x,to_y,promo_piece){if(cur_mode!=modes.SOLVE)return true;if(bob.cur_to_move!=puzzle_to_move)return true;if(fatal_error||puzzle_error_msg)return false;if(cur_solution_node<0||cur_solution_node>=solution.length)return false;var sn=solution[cur_solution_node];if(!sn.moves||sn.moves.length==0)return false;var last_move=split_move(bob.chess_encode_move(from_x,from_y,to_x,to_y,promo_piece));var b_found=0;var best_mtc=-1;for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];var mtc=solution[mv.goto_node].moves_to_checkmate;if(best_mtc<0)best_mtc=mtc;if(best_mtc<mtc)break;if(!same_move(mv,last_move))continue;b_found=1;break;}if(!b_found&&!bob.chess_checkmate_move(from_x,from_y,to_x,to_y,promo_piece)){report_wrong_move();if(!node_wrong_moves[cur_solution_node])node_wrong_moves[cur_solution_node]=1;else node_wrong_moves[cur_solution_node]++;return false;}disable_hint_button();reset_move_hint(1);return true;}function find_unfinished_branches(){for(var idx=solution.length-1;idx>=0;idx--){var sn=solution[idx];if(sn.b_solution_move)continue;var mv=-1;for(var i=0;i<sn.moves.length;i++){if(sn.moves[i].goto_node>=0)continue;mv=i;break;}if(mv<0)continue;cur_solution_node=idx;cur_solution_move=mv;bob.moves=sn.movelist.slice();bob.max_move=bob.moves.length;bob.goto_move(bob.max_move,1);make_move(sn.moves[mv].coords,sn.moves[mv].promo);pop_msg('Alternative variation / branch...',1000);return 1;}return 0;}function callback_click_move(move_num){if(cur_mode!=modes.SOLUTION_FINAL&&cur_mode!=modes.SOLVED&&cur_mode!=modes.SOLUTION_ALT)return;if(cur_mode==modes.SOLUTION_ALT&&b_alt_solution_started)return;navigate_to_move(move_num);}function navigate_to_move(move_num){bob.anim_move(move_num);move_num=bob.current_move;var dbg='';var new_cur_node=0;for(var j=0;j<move_num;j++){var sn=solution[new_cur_node];var mv=split_move(bob.chess_get_move(j));new_cur_node=-1;for(var i=0;i<sn.moves.length;i++){if(!same_move(mv,sn.moves[i]))continue;new_cur_node=sn.moves[i].goto_node;break;}dbg+=j+' -> '+new_cur_node+' ('+bob.chess_get_move(j)+')\n';if(new_cur_node<0||new_cur_node>=solution.length){if(j<(move_num-1))report_error('Unable to locate move!\n'+dbg,1);new_cur_node=sn.moves[0].goto_node;}}cur_solution_node=new_cur_node;update_possible_moves_display();update_alt_solution();}function update_alt_solution(){if(cur_mode!=modes.SOLUTION_ALT)return;if(cur_solution_node>=0&&cur_solution_node<solution.length){bob.b_allow_new_moves=solution[cur_solution_node].b_solution_move;}else{bob.b_allow_new_moves=0;}}function hide_possible_moves_display(){var o=gk_get_el('possible_moves');if(!o)return;var parent_node=o.parentNode;parent_node.removeChild(o);}function compare_possible_moves(a,b){if(a.s<b.s)return 1;if(a.s>b.s)return-1;if(a.mv>b.mv)return 1;if(a.mv<b.mv)return-1;return 0;}function update_possible_moves_display(){var node=solution[cur_solution_node];var txt='';if(node.moves.length>0){txt+='<div style="text-align: left;">'+(node.b_solution_move?'Solution:<br>':'<span class=span-q onMouseOver="pb_show(event,\'Available responses, followed by # of moves to forced checkmate\',200)">Possible moves:</span>')+'</div>';txt+='<div style="height: 100px; overflow: auto;" id="list_possible_moves">';txt+='<table class=norm style="margin-left: 20px;">';for(var i=0;i<node.moves.length;i++){var mv=node.moves[i];txt+='<tr>';txt+='<td><a href="javascript:void(0)" onClick="goto_solution_node('+cur_solution_node+','+i+')">'+mv.notation+'</a></td>';var mtc=full_moves(solution[mv.goto_node].moves_to_checkmate+1);txt+='<td>#'+mtc+'</td>';txt+='</tr>';}txt+='</table>';txt+='</div>';}var ht=300;var o=bob.get_obj('right_pane');if(o)ht=o.clientHeight;o=gk_get_el('possible_moves');if(!o){o=document.createElement('div');o.id='possible_moves';o.style.padding='8px 0 0 16px';var me=bob.get_obj('moves');var parent_node=me.parentNode;parent_node.appendChild(o);}o.innerHTML=txt;o=gk_get_el('list_possible_moves');if(o){ht=ht-o.offsetTop-6;if(ht<50)ht=50;o.style.height=ht+'px';}}function goto_solution_node(node_num,move_num){if(node_num<0||node_num>=solution.length)return;var sn=solution[node_num];if(move_num<0||move_num>=sn.moves.length)return;cur_solution_node=sn.moves[move_num].goto_node;render_cur_soluton_node();update_alt_solution();}function render_cur_soluton_node(b_no_movers){var node=solution[cur_solution_node];var board_move_num=node.get_move_num();var movelist=node.movelist.join('');while(node.moves.length>0){var mv=node.moves[0];movelist+=mv.coords+bob.validate_promo(mv.promo);node=solution[mv.goto_node];}bob.init_moves_and_promos(movelist,5);bob.reset_all(board_move_num,b_no_movers);update_possible_moves_display();}function callback_mouse_click(x,y){gui_pop_message_remove();reset_move_hint();}function show_menu_1(el){var txt='<a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=1" title="Go to the previous unsolved puzzle">Previous unsolved puzzle</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=-1" title="Go to the next unsolved puzzle">Next unsolved puzzle</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=2" title="Go to the previous puzzle (any)">Previous puzzle (any)</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=-2" title="Go to the next puzzle (any)">Next puzzle (any)</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=3" title="Go to the next unsolved harder puzzle">Next harder puzzle</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=5" title="Go to the next unsolved puzzle with a similar difficulty">Next similar diff. puzzle</a><br><a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=4" title="Go to the next unsolved easier puzzle">Next easier puzzle</a><br><a href="javascript:void(0)" title="Show all puzzles" onClick="goto_all_puzzles()">All puzzles&hellip;</a><br>';gui_pop_menu(txt,el,{'dir':0,'align':1});}function show_menu_2(el){var txt='<a href="javascript:void(0)" onClick="show_stats();" title="Show my puzzle solving stats">My stats&hellip;</a><br><a href="javascript:void(0)" onClick="show_pos_graph()" title="Show the graph for all moves and positions in this puzzle">All moves graph&hellip;</a><br><a href="javascript:void(0)" onClick="start_alt_solution()" title="Enter an alternative solution">Another solution&hellip;</a><br><a href="javascript:void(0)" onClick="show_html_code()" title="Get the HTML code to publish the daily puzzle on your own website/blog">Web/HTML&hellip;</a><br><a href="javascript:void(0)" onClick="bob.show_options(this)" title="Change options">Options&hellip;</a><br>';gui_pop_menu(txt,el,{'dir':0,'align':1});}function hide_puzzles_menu(el){gui_pop_menu_remove_delayed();}function start_solve_mode(no_message){cur_mode=modes.SOLVE;var o=bob.get_obj('help');if(puzzle_error_msg){o.innerHTML=puzzle_error_msg;}else{o.innerHTML="<em>To solve the puzzle:</em> enter the solution by moving the pieces on the board. The virtual opponent's moves will be made for you automatically. Use [Hint] button above if you are stuck (enabled after a few seconds).";}bob.b_freestyle=0;bob.b_allow_new_moves=1;cur_solution_node=0;bob.callback_record_move=callback_record_move;bob.callback_click_move=callback_click_move;bob.callback_validate_move=callback_validate_move_solve;bob.callback_mouse_click=callback_mouse_click;reset_board();hide_possible_moves_display();update_description_display();o=gk_get_el('buttons_menu');o.innerHTML='<table class=norm style="width: 100%;"><tr><td style="text-align: center; white-space: nowrap; width: 80%;"><INPUT TYPE="button" VALUE="Reset" onClick="restart_solve()"> <INPUT TYPE="button" VALUE="Hint?" onClick="show_move_hint()" id="hint_button" DISABLED> <INPUT TYPE="button" VALUE="Analyze" onClick="start_analyze()"> </td><td style="text-align: center; white-space: nowrap;"><a href="javascript:goto_all_puzzles()" onMouseOver="show_menu_1(this)" onMouseOut="hide_puzzles_menu(this)" title="Access more puzzles">More puzzles<sub class=sml>&#9660;</sub></a> '+gk_menu_delim+'<a href="javascript:void(0)" onClick="bob.show_options(this)" onMouseOver="show_menu_2(this)" onMouseOut="hide_puzzles_menu(this)" title="Change options">Options<sub class=sml>&#9660;</sub></a> </td></tr></table>';disable_hint_button();node_hints=[];node_wrong_moves=[];node_solution_moves=[];node_solution_moves[0]=1;if(!puzzle_fen)pop_msg('Chess puzzle not found!');else
if(!no_message)pop_msg(get_puzzle_description());}function start_analyze(){cur_mode=modes.ANALYZE;var o=bob.get_obj('help');o.innerHTML="<b>Analyze mode:</b> you can make any moves on the board to try different strategies. Click [Solve] button when you are ready to solve the puzzle.";var movelist=bob.get_moves();var max_move=bob.max_move;bob.init_position(puzzle_fen);bob.init_moves_and_promos(movelist,5);bob.init_options(0,0,1,1);bob.b_freestyle=0;bob.b_allow_new_moves=1;cur_solution_node=0;bob.callback_record_move=null;bob.callback_click_move=null;bob.callback_validate_move=null;bob.callback_mouse_click=null;bob.reset_all(max_move);hide_possible_moves_display();update_description_display();o=gk_get_el('buttons_menu');o.innerHTML='<INPUT TYPE="button" VALUE=" |&lt; " onClick="bob.anim_move(0);"> <INPUT TYPE="button" VALUE="  &lt;  " onClick="bob.prevmove();"> <INPUT TYPE="button" VALUE="  &gt;  " onClick="bob.nextmove();"> <INPUT TYPE="button" VALUE="Solve" onClick="start_solve_mode()"> ';pop_msg('Analyze mode...');}var hint_button_timer=0;var display_hint_timer=0;var show_move_hint_count=0;function disable_hint_button(){if(hint_button_timer){window.clearTimeout(hint_button_timer);hint_button_timer=0;}var o=gk_get_el('hint_button');if(o)o.disabled=1;hint_button_timer=window.setTimeout('enable_hint_button()',10000);}function enable_hint_button(){if(hint_button_timer){window.clearTimeout(hint_button_timer);hint_button_timer=0;}var o=gk_get_el('hint_button');if(o)o.disabled=0;}function show_move_hint(){if(contest_mode())return;if(show_move_hint_count>0)count_hints2++;else count_hints1++;if(!node_hints[cur_solution_node])node_hints[cur_solution_node]=1;else node_hints[cur_solution_node]++;if(count_hints1==1&&count_hints2==0)report_solved(0);var o=bob.get_obj('help');if(o){o.innerHTML="<em>To solve the puzzle:</em> enter the solution by moving the pieces on the board. The virtual opponent's moves will be made for you automatically. Use [Hint] button above if you are stuck (enabled after a few seconds)."+'<div class="nrml pp"><em>'+get_comments_link()+'</em></div>';}show_move_hint_count++;display_move_hint(7);disable_hint_button();}function reset_move_hint(init){if(display_hint_timer){window.clearTimeout(display_hint_timer);display_hint_timer=0;}display_move_hint(0);if(init){show_move_hint_count=0;}}function display_move_hint(countdown){if(cur_mode!=modes.SOLVE)return true;if(cur_solution_node<0||cur_solution_node>=solution.length)return;var sn=solution[cur_solution_node];if(!sn.moves.length)return;var cc=sn.moves[0].coords;var mv=bob.chess_decode_move(cc);var b_on=countdown%2?3:0;bob.update_cell_image(mv[0],mv[1],b_on);if(show_move_hint_count>1)bob.update_cell_image(mv[2],mv[3],b_on);if(countdown>0){var _c=countdown-1;display_hint_timer=window.setTimeout(function(){display_move_hint(_c);},600);}}function start_solved_mode(msg,reset_all){cur_mode=modes.SOLVED;if(contest_mode(1)){try{if(window.opener)window.opener.location.reload(true);}catch(e){}}var o=bob.get_obj('help');o.innerHTML='<div class="nrml pp"><em>'+get_comments_link()+'</em></div>'+(contest_mode(1)?'<span class=nrml><b class=wrn>Puzzle solved:</b> Congratulations! Your progress has been saved. Check back tomorrow for a new puzzle and another chance to win the Grand Prize! &raquo; <a href="/chess-puzzle-contest.pl" target="_blank">more information&hellip;</a></span>':'<b>Puzzle solved:</b> Congratulations! You can browse the solution by clicking on the moves in the move list to the right of the board, or by using [&lt;] and [&gt] buttons.');bob.init_options(0,0,1,1);bob.b_freestyle=0;bob.b_allow_new_moves=0;bob.callback_record_move=null;bob.callback_click_move=callback_click_move;bob.callback_validate_move=null;if(reset_all){cur_solution_node=0;cur_solution_move=-1;render_cur_soluton_node();}update_description_display();o=gk_get_el('buttons_menu');o.innerHTML='<table class=norm style="width: 100%;"><tr><td style="text-align: center; white-space: nowrap; width: 80%;"><INPUT TYPE="button" VALUE=" |&lt; " onClick="goto_start();"> <INPUT TYPE="button" VALUE="  &lt;  " onClick="goto_prev_move();"> <INPUT TYPE="button" VALUE="  &gt;  " onClick="goto_next_move();"> </td><td style="text-align: center; white-space: nowrap;"><a href="javascript:goto_all_puzzles()" onMouseOver="show_menu_1(this)" onMouseOut="hide_puzzles_menu(this)" title="Access more puzzles">More puzzles<sub class=sml>&#9660;</sub></a> '+gk_menu_delim+'<a href="javascript:void(0)" onClick="bob.show_options(this)" onMouseOver="show_menu_2(this)" onMouseOut="hide_puzzles_menu(this)" title="Change options">Options<sub class=sml>&#9660;</sub></a> </td></tr></table>';if((typeof msg)=='undefined')msg='Puzzle solved, congratulations!';if(msg)pop_msg(msg);}function goto_all_puzzles(){var ok=0;try{if(window.opener){window.opener.location.href='/chess-puzzles.pl';window.close();ok=1;}}catch(e){}if(!ok){popw('/chess-puzzles.pl',1000,800);}}function undo_move(){if(cur_mode!=modes.SOLUTION&&cur_mode!=modes.SOLUTION_ALT)return;if(!b_can_undo_last_move)return;if(bob.movers_active())return;enable_undo(0);if(solution.length<2){report_error('Solution length: '+solution.length);return;}var last_node=solution.length-1;if(cur_solution_node!=last_node){report_error('cur_solution_node!=last_node\n'+cur_solution_node+'!='+last_node);return;}var sn=solution[last_node];for(var i=0;i<sn.moves.length;i++){if(sn.moves[i].goto_node>=0){report_error('sn.moves[i].goto_node>=0\n'+i+','+sn.moves[i].goto_node);return;}}var prev_node=sn.parent_node;sn=solution[prev_node];if(sn.b_solution_move)report_error('Unexpected solution node in undo_move()! idx='+prev_node);for(var i=0;i<sn.moves.length;i++){var goto_node=sn.moves[i].goto_node;if(goto_node<0)continue;if(goto_node==last_node)continue;report_error('Undo impossible because of linked node: '+prev_node+', move: '+i+', to: '+goto_node);return;}cur_solution_node=sn.parent_node;enable_undo_if_possible(prev_node);solution.pop();solution.pop();bob.undo_last_move(2);}function enable_undo_if_possible(remove_links_to_node){var can_undo=0;if(cur_solution_node>=0){can_undo=1;var sn=solution[cur_solution_node];if(!sn.b_solution_move)report_error('Unexpected non-solution node in enable_undo_if_possible()! idx='+cur_solution_node);for(var i=0;i<sn.moves.length;i++){var goto_node=sn.moves[i].goto_node;if(goto_node<0)continue;if(remove_links_to_node!=undefined&&goto_node==remove_links_to_node){if(i!=(sn.moves.length-1)){report_error('Not the last move on undo! i='+i+', len='+sn.moves.length);}sn.moves.pop();continue;}can_undo=0;}var new_prev_node=sn.parent_node;if(new_prev_node>=0){sn=solution[new_prev_node];if(sn.b_solution_move)report_error('Unexpected solution node in enable_undo_if_possible()! idx='+new_prev_node);for(var i=0;i<sn.moves.length;i++){var goto_node=sn.moves[i].goto_node;if(goto_node<0)continue;if(goto_node==cur_solution_node)continue;can_undo=0;break;}}else{can_undo=0;}}enable_undo(can_undo);}function undo_one_move(){if(cur_mode!=modes.SOLUTION&&cur_mode!=modes.SOLUTION_ALT)return;enable_undo(0);if(solution.length<1){report_error('Solution length: '+solution.length);return;}var last_node=solution.length-1;if(cur_solution_node!=last_node){report_error('cur_solution_node!=last_node\n'+cur_solution_node+'!='+last_node);return;}var sn=solution[last_node];for(var i=0;i<sn.moves.length;i++){if(sn.moves[i].goto_node>=0){report_error('sn.moves[i].goto_node>=0\n'+i+','+sn.moves[i].goto_node);return;}}var prev_node=sn.parent_node;sn=solution[prev_node];if(!sn.b_solution_move)report_error('Unexpected non-solution node on undo_one_move! idx='+prev_node);for(var i=0;i<sn.moves.length;i++){var goto_node=sn.moves[i].goto_node;if(goto_node<0)continue;if(goto_node==last_node){if(i!=(sn.moves.length-1)){report_error('Not the last move on undo! i='+i+', len='+sn.moves.length);}sn.moves.pop();continue;}}var prev_prev_node=sn.parent_node;var can_undo_further=0;if(prev_prev_node>=0){can_undo_further=1;sn=solution[prev_prev_node];if(sn.b_solution_move)report_error('Unexpected solution node on undo_one_move! idx='+prev_prev_node);for(var i=0;i<sn.moves.length;i++){var goto_node=sn.moves[i].goto_node;if(goto_node<0)continue;if(goto_node==prev_node)continue;can_undo_further=0;}}cur_solution_node=prev_node;solution.pop();bob.undo_last_move();enable_undo(can_undo_further);}function restart_solve(){if(cur_mode!=modes.SOLVE)return;start_solve_mode(1);}var last_hilite_nodes=[];function hilite_graph_nodes(node_list){var b_hilite=1;var nodes;if((typeof node_list)=='undefined'){b_hilite=0;nodes=last_hilite_nodes.slice();last_hilite_nodes=[];}else{hilite_graph_nodes();nodes=node_list.split(',');last_hilite_nodes=nodes.slice();}for(var i=0;i<nodes.length;i++){var node_num=to_int(nodes[i]);var o=gk_get_el('gnd'+node_num);if(!o)continue;set_css_class(o,'hlt_text',b_hilite);}}function build_pos_graph(cur_node,cur_row,cur_move,cur_path,state){if(cur_node<0||cur_node>=solution.length)return;var sn=solution[cur_node];var row=cur_row;state.nodes[cur_node]=1;var b_flip=(puzzle_to_move=='w')?0:1;if(cur_path)cur_path+=',';cur_path+=cur_node;for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];if(mv.goto_node<0||mv.goto_node>=solution.length)continue;if(state.nodes[mv.goto_node]){if(i==0)state.rows[cur_row]+='<td id="post_gnd'+sn.node_idx+'">&hellip;</td>';continue;}if(i>0){state.max_row++;row=state.max_row;var st='&hellip; ';if(cur_move==0){st='';}else{st='<td colspan='+cur_move+' style="cursor: default; text-align: right" id="pre_gnd'+mv.goto_node+'">'+st+'</td>';}state.rows[row]=st;}var notation=mv.notation;if((cur_move%2)!=0)notation='<i>'+notation+'</i>';var num='';if(puzzle_to_move=='w'){if((cur_move%2)==0){num=Math.floor(1+cur_move/2);}}else{if((cur_move%2)!=0){num=Math.floor(2+cur_move/2);}}if(num)num='<b class=sml>'+num+'.</b> ';if(puzzle_to_move=='b'&&cur_move==0){num='<b class=sml>1.</b> &hellip; ';}var path=cur_path;var next_node=mv.goto_node;while(1){path+=','+next_node;if(!solution[next_node].moves||!solution[next_node].moves.length)break;next_node=solution[next_node].moves[0].goto_node;}var goto_node=solution[mv.goto_node];var fen=goto_node.fen;fen+='|||last='+mv.coords+'&flip='+b_flip;var stl=goto_node.b_deadend?' class=dim':'';state.rows[row]+='<td id="gnd'+mv.goto_node+'" onMouseOver="hilite_graph_nodes(\''+path+'\');gk_pop_fen(event,\''+fen+'\',\''+notation+'\');" onClick="goto_graph_node('+cur_node+','+i+');"'+stl+'>'+num+notation+'</td>';build_pos_graph(mv.goto_node,row,cur_move+1,cur_path,state);}}function goto_graph_node(node,move){gk_popup_bubble_hide();gui_hide_fullpage_form();goto_solution_node(node,move);}function graph_nodes_on_change_alt_solutions(el){if(!el)return;if(!el.options)return;var i=el.selectedIndex;if(i<0)return;if(i>=el.options.length)return;i=el.options[el.selectedIndex].value;hilite_graph_alt_solution(i);}function hilite_graph_alt_solution(n){var o;for(var i=0;i<solution.length;i++){var b_dim=1;if(n<0||n==solution[i].alt_sol){b_dim=0;}o=gk_get_el('gnd'+i);if(o)set_css_class(o,'off',b_dim);o=gk_get_el('pre_gnd'+i);if(o)set_css_class(o,'off',b_dim);o=gk_get_el('post_gnd'+i);if(o)set_css_class(o,'off',b_dim);}}function show_pos_graph(){if(contest_mode())return;gui_pop_menu_remove();report_failed();update_all_nodes_fen();var state={max_row:0,rows:[''],nodes:[]};build_pos_graph(0,0,0,'',state);start_solved_mode('',1);var all_rows=[];for(var i=0;i<state.rows.length;i++){all_rows.push('<tr>'+state.rows[i]+'</tr>');}var max_w=gk_doc_width()-120;var max_h=gk_doc_height()-160;var alt_sols='';for(var i=0;i<alt_solutions.length;i++){var as=alt_solutions[i];alt_sols+='<option value='+i+'>'+as.userid+', '+as.desc+'</option>';}if(alt_sols){alt_sols='<option value="-1">all</option>'+alt_sols;alt_sols='<tr><td>More solutions: <SELECT onChange="graph_nodes_on_change_alt_solutions(this);">'+alt_sols+'</SELECT><td></tr>';max_h-=40;}gui_show_fullpage_form('<table border=0 cellspacing=10 cellpadding=0 style="margin: 5px;">'+alt_sols+'<tr><td align="center"><div id="all_moves_graph" style="width: '+max_w+'px; height: '+max_h+'px; overflow: auto; border: 1px solid #666677; vertical-align: middle; text-align: center;"><table colspacing=0 colpadding=0 border=0 id="allmovesgraph">'+all_rows.join('')+'</table></div></td></tr><tr><td align="center" class=sml><INPUT TYPE="button" VALUE="Done" onClick="gui_hide_fullpage_form();"><br>(point the mouse over any of the moves to see the position on the board at that time)</td></tr></table>','all_moves_graph');}function update_all_nodes_fen(){bob.init_position(puzzle_fen);bob.init_moves_and_promos('');bob.reset_all(0,1);recursive_update_nodes_fen(0);bob.init_position(puzzle_fen);bob.init_moves_and_promos('');bob.reset_all(0,1);}function recursive_update_nodes_fen(cur_node){if((typeof cur_node)=='undefined')var cur_node=0;if(cur_node<0||cur_node>=solution.length)return;var sn=solution[cur_node];if(sn.fen&&sn.fen.length>0)return;sn.fen=bob.encode_fen();var saved_state;var saved_to_move=bob.cur_to_move;if(sn.moves.length>1){saved_state=bob.chess_save_state();}for(var i=0;i<sn.moves.length;i++){var mv=sn.moves[i];if(i>0){bob.chess_restore_state(saved_state);bob.cur_to_move=saved_to_move;}var from_x=mv.coords.charCodeAt(0)-97;var from_y=mv.coords.charCodeAt(1)-49;var to_x=mv.coords.charCodeAt(2)-97;var to_y=mv.coords.charCodeAt(3)-49;bob.chess_make_move(from_x,from_y,to_x,to_y,mv.promo);bob.cur_to_move=bob.cur_to_move=='w'?'b':'w';recursive_update_nodes_fen(mv.goto_node);}}function pct(n,total){if(!total)total=1;return Math.round(100*to_int(n)/total)+'%';}function show_stats(){var params=[];params.push('id='+puzzle_id);params.push('stats=1');var data=gk_request_remote_data('/chess-puzzle-rating.pl',0,null,params.join('&'));if(!data)return;var data=data.split('\n');if(data[0]!='puzzle-stats.1.0'){alert('ERROR: unable to establish connection to the server!\n');return 0;}var s={};try{s=eval('('+data[1]+')');}catch(e){report_error('Error parsing JSON: '+data[1]);}render_stats(s,0);}function render_stats(s,b_mini,message){gui_pop_message_remove();var per_stars=s.count_per_stars||[];var stars_stats='';if(!b_mini){for(var si=5;si>=1;si--){var ps=per_stars[si]||[];var sb='<div id="starbox'+si+'" style="float:right; margin-left: 4px;"></div>';stars_stats+='<tr><td align=right>'+sb+'Solved without hints: </td><td align=left><b>'+to_int(ps[1])+'</b></td><td class=sml>('+pct(ps[1],ps[0])+')</td></tr>';}}message=message?'<div class="wrn pp">'+message+'</div>':'';var b_logged_in=is_logged_in()?1:0;var hint_exlt='<span class=span-q onMouseOver="pb_show(event,\'Solved without using hints and with no more than 5 wrong moves attempted.<br>Or found an alternative solution to the puzzle.\')"></span>';var hint_tried='<span class=span-q onMouseOver="pb_show(event,\'Making a move in a puzzle counts as a try, until the puzzle is solved. Accessing all moves graph before solving the puzzle permanently marks it as not solved.\')"></span>';var txt=message+(b_logged_in?'':'<div class="err pp"><img class=imgs style="width: 29px; height: 29px;" src="/img/error.png"> Please log in to your account to track stats!</div>')+'<table class=norm>'+(b_mini&&b_logged_in?'<tr><td style="text-align: right;">Rate this puzzle\'s difficulty &raquo;</td><td align=left colspan=2><div id="starbox-pop"></div></td></tr>':'')+(b_mini&&b_logged_in&&!puzzle_daily?'<tr><td colspan=3 style="text-align: center; white-space: nowrap;"><div id="vote_daily_puzzle"><INPUT TYPE=CHECKBOX VALUE=1 style="vertical-align: middle;"> - <span class=span-q onMouseOver="pb_show(event,\'Vote to make it a Daily Puzzle featured on the front page (interesting, engaging or clever puzzles, regardless of their difficulty)\')">Nominate for a Daily Puzzle</span></div></td></tr>':'')+'<tr><td align=right>Puzzles solved excellently:</td><td align=left><b>'+to_int(s.count_solved_perfect)+'</b></td><td class=sml>('+pct(s.count_solved_perfect,s.count_all)+')'+hint_exlt+'</td></tr><tr><td align=right>Puzzles solved without using hints:</td><td align=left><b>'+to_int(s.count_solved_no_hints)+'</b></td><td class=sml>('+pct(s.count_solved_no_hints,s.count_all)+')</td></tr><tr><td align=right>Average number of wrong moves:</td><td colspan=2 align=left><b>'+to_int(10*s.avg_wrong_moves)/10+'</b></td></tr>'+stars_stats+(b_mini?'':'<tr><td align=right>Total puzzles solved:</td><td align=left><b>'+to_int(s.count_solved)+'</b></td><td class=sml>('+pct(s.count_solved,s.count_all)+')</td></tr>')+'<tr><td align=right>Total puzzles tried:</td><td colspan=2 align=left><b>'+to_int(s.count_all)+'</b>&nbsp;&nbsp;'+hint_tried+'</td></tr></table><table class=norm style="margin: 0 auto;"><tr><td>'+get_comments_link()+'<br>&raquo; <a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=1" title="Go to the next unsolved puzzle">Next puzzle</a><br>'+(b_mini?'&raquo; <a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=4" title="Go to the next unsolved easier puzzle">Next easier puzzle</a><br>&raquo; <a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=5" title="Go to the next unsolved puzzle with a similar difficulty">Next similar difficulty puzzle</a><br>&raquo; <a href="/chess-puzzle.pl?pz='+puzzle_id+'&next=3" title="Go to the next unsolved harder puzzle">Next harder puzzle</a><br>&raquo; <a href="javascript:void(0)" title="Show full stats" onClick="show_stats()">Full stats&hellip;</a><br>':'')+'&raquo; <a href="javascript:void(0)" title="Show all puzzles" onClick="goto_all_puzzles()">All puzzles&hellip;</a><br></td></tr></table><div class=pp style="text-align: center;"><INPUT TYPE="button" VALUE="  Ok  " onClick="gui_pop_form_remove()"></div>';var frm=bob.board||document.body;gui_pop_form(txt,frm,{'dir':4,'align':1,'header':'Your puzzle solving stats:'});if(!b_mini){for(var si=1;si<=5;si++){var stars=new create_stars(si,'starbox'+si,si*2);stars.display(1,1);}}else{var stars=new create_stars(puzzle_id,'starbox-pop',puzzle_rating>=0?puzzle_rating:0,'chess-puzzle-rating.pl');stars.display(1,0);}if(b_mini&&!puzzle_daily){var t=new create_data_save('vote_daily_puzzle',1,'/chess-puzzle-save.pl',['pz='+puzzle_id,'act=nomdp'],['pz='+puzzle_id,'act=getdp']);}}function is_logged_in(){return cc_get('ESID')==''?0:1;}function get_comments_link(){return '<a href="javascript:void(0)" onClick="goto_comments_page(); return false;"><img src="/img/i/balloons.png" class=img-i style="margin-bottom: 2px;">'+puzzle_comments+' comment'+(puzzle_comments==1?'':'s')+'</a>';}function goto_comments_page(){var url='/comment.pl?t=2&k='+puzzle_id;var ww;if(window.opener){try{ww=window.opener;ww.location.href=url;}catch(e){ww=null;}}if(!ww)ww=window.open(url,'_blank','');if(ww)ww.focus();window.close();}var old_error_msg_callback;if((typeof gk_error_msg_callback)!='undefined'){old_error_msg_callback=gk_error_msg_callback;gk_error_msg_callback=get_debug_info;}function get_debug_info(no_callback){var rep='\n\tpuzzle_id: '+puzzle_id;rep+='\n\tpuzzle_fen: '+puzzle_fen;rep+='\n\tpuzzle_to_move: '+puzzle_to_move;rep+='\n\tpuzzle_max_moves: '+puzzle_max_moves;rep+='\n\tbob.moves: '+(bob&&bob.moves?bob.moves.join(''):'-');rep+='\n\tbob.current_move: '+(bob?bob.current_move:'-');rep+='\n\tcur_mode: '+cur_mode;rep+='\n\tcur_solution_node: '+cur_solution_node;rep+='\n\tcur_solution_move: '+cur_solution_move;if(solution){rep+='\n\tsolution.length: '+solution.length;if(solution.length)rep+='\n\tsolution[last]: '+solution[solution.length-1].movelist.join('');if(cur_solution_node>=0&&cur_solution_node<solution.length)rep+='\n\tsolution[current]: '+solution[cur_solution_node].movelist.join('');}if(!no_callback&&(typeof old_error_msg_callback)=='function'){rep+=old_error_msg_callback();}return rep;}function report_error(msg,b_no_alert){var rep=msg+'\n'+get_debug_info(1);gk_log_error(rep);if(b_no_alert)return;fatal_error=1;alert('FATAL ERROR: '+msg);}
